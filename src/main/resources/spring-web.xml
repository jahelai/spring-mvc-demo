<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation=" 
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	default-autowire="byName">


	<context:component-scan base-package="com.sample.web.controller" />

	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- Customized View Resolver to resolve .swf, .config and .properties files -->
	<bean id="viewResolver" class="com.sample.web.viewresolver.MultipleViewResolver"
		p:order="0">
		<property name="resolvers">
			<map>

				<entry key="config">
					<bean class="com.sample.web.viewresolver.GenericFileViewResolver"
						p:location="/WEB-INF/config/" p:cache="false">
						<property name="viewName" value="configFileView" />
					</bean>
				</entry>

				<entry key="swf">
					<bean class="com.sample.web.viewresolver.GenericFileViewResolver"
						p:location="/WEB-INF/swf/" p:cache="false">
						<property name="viewName" value="swfFileView" />
					</bean>
				</entry>

			</map>
		</property>
	</bean>

	<bean id="configFileView" class="com.sample.web.view.GenericFileView"
		p:contentType="text/plain" p:url="" scope="prototype" />

	<bean id="swfFileView" class="com.sample.web.view.GenericFileView"
		p:contentType="application/x-shockwave-flash" p:url="" scope="prototype" />

	<!-- -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">UTF-8</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />


	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="favorParameter" value="false" />
		<property name="ignoreAcceptHeader" value="true" />

		<property name="defaultContentType" value="application/json" />

		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="html" value="text/html" /><!-- 真正静态页面，使用htm后缀(文件格式) -->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<!-- 页面请求时先找此配置，无的话再找jsp的视图配置 -->
				<bean
					class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="true" />
					<property name="prefix" value="" />
					<property name="suffix" value=".ftl" />
					<property name="exposeSpringMacroHelpers" value="true" />
					<property name="exposeRequestAttributes" value="true" />
					<property name="exposeSessionAttributes" value="true" />
					<property name="contentType" value="text/html;charset=UTF-8" />
				</bean>
	<!-- 
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"	value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			-->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
					<property name="prefix" value="/WEB-INF/jsp/" /> 
					<property name="suffix" value=".jsp" /> 
				</bean> 
			</list>
		</property>
		<!-- view 接口 下的视图解析对象 -->
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" 
					/> -->
				<!-- XML View -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="packagesToScan">
								<list>
									<value>com.sample.model</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 需要谨慎使用Spring的错误解析视图, 要是使用不当的话，在后台异常如果没有捕获的情况下，不会显示出异常堆栈信息(会出现只发现前端页面请求出错，但后台看不到异常信息。)。
	这对系统的开发、维护带来比较大的影响。 -->
	<!-- 
	<bean
		class="com.base.exception.CustomSimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error/500"></property>
		<property name="defaultStatusCode" value="500"></property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.sql.SQLException">error/dbError</prop>
				<prop key="java.lang.NullPointerException">error/runtime</prop>
				<prop key="java.lang.Exception">error/unknowError</prop>
			</props>
		</property>
	</bean>
	-->
</beans> 